{"ast":null,"code":"var _jsxFileName = \"/Users/marynahuzei/Desktop/react-blended-3/src/pages/CountrySearch.jsx\";\nimport { Container, SearchForm, Section, Heading, Loader, CountryList } from \"components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountrySearch = () => {\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(SearchForm, {\n        onCountrySelect: onCountrySelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}; // import { useEffect, useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { fetchByRegion } from 'service/country-service';\n// export const CountrySearch = () => {\n//   const [search, setSearchParams] = useSearchParams();\n//   const [countries, setCountries] = useState([]);\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   useEffect(() => {\n//     const region = search.get('region');\n//     if (!region) return;\n//     setLoading(true);\n//     fetchByRegion(region)\n//       .then(setCountries)\n//       .catch(error => setError(error.message))\n//       .finally(setLoading(false));\n//   }, [search]);\n//   const onCountrySelect = region => {\n//     setSearchParams({ region });\n//   };\n//   return (\n//     <Section>\n//       <Container>\n//         <SearchForm onCountrySelect={onCountrySelect} />\n//         <CountryList countries={countries} />\n//         {loading && <Loader />}\n//         {error && <Heading>{error}</Heading>}\n//       </Container>\n//     </Section>\n//   );\n// };\n\n_c = CountrySearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountrySearch\");","map":{"version":3,"names":["Container","SearchForm","Section","Heading","Loader","CountryList","CountrySearch","onCountrySelect"],"sources":["/Users/marynahuzei/Desktop/react-blended-3/src/pages/CountrySearch.jsx"],"sourcesContent":["import {\n  Container,\n  SearchForm,\n  Section,\n  Heading,\n  Loader,\n  CountryList,\n} from \"components\";\n\nexport const CountrySearch = () => {\n  return (\n    <Section>\n      <Container>\n        <SearchForm onCountrySelect={onCountrySelect} />\n      </Container>\n    </Section>\n  );\n};\n\n// import { useEffect, useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { fetchByRegion } from 'service/country-service';\n\n// export const CountrySearch = () => {\n//   const [search, setSearchParams] = useSearchParams();\n//   const [countries, setCountries] = useState([]);\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     const region = search.get('region');\n//     if (!region) return;\n\n//     setLoading(true);\n//     fetchByRegion(region)\n//       .then(setCountries)\n//       .catch(error => setError(error.message))\n//       .finally(setLoading(false));\n//   }, [search]);\n\n//   const onCountrySelect = region => {\n//     setSearchParams({ region });\n//   };\n\n//   return (\n//     <Section>\n//       <Container>\n//         <SearchForm onCountrySelect={onCountrySelect} />\n//         <CountryList countries={countries} />\n//         {loading && <Loader />}\n//         {error && <Heading>{error}</Heading>}\n//       </Container>\n//     </Section>\n//   );\n// };\n"],"mappings":";AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,MALF,EAMEC,WANF,QAOO,YAPP;;AASA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,oBACE,QAAC,OAAD;IAAA,uBACE,QAAC,SAAD;MAAA,uBACE,QAAC,UAAD;QAAY,eAAe,EAAEC;MAA7B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CARM,C,CAUP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA7CaD,a"},"metadata":{},"sourceType":"module"}